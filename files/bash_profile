#Load other files
source ~/.bash/aliases-coreutils
source ~/.bash/color-vars
source ~/.bash/bash-prompts

# Always place this last
source ~/.bash/aliases-general

#init for RVM
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

#Prepare for magic!
if [ $USER != "root" ]; then
	export PS1="\[$txtrst\]\u@\H [\[$bldylw\]\W\[$txtrst\]] \`\
		if [ \$? = 0 ];	
		then
			if [ $RANDOM -le 16383 ]; then
				echo -e '\[$bldylw\]$success';
			else
				echo -e '\[$bldylw\]$morning';
			fi
		else
			if [ $RANDOM -le 16383 ]; then
				echo -e '\[$bldred\]$fail';
			else
				echo -e '\[$bldred\]$sigh';
			fi
		fi \`\[$txtrst\]$ " #Smileys depending on success of commands
else
	export PS1="\[$txtrst\]\[$bldred\]\u@\H \[$txtrst\][\[$bldylw\]\W\[$txtrst\]]# \[$txtred\]"
fi

#export PS1="\[$txtrst\]sean@Tina-osx [\[$bldylw\]\W\[$txtrst\]] \`if [ \$? = 0 ]; then echo -e '\[$bldylw\]$success'; else echo -e '\[$bldred\]$fail$yeow'; fi \`\[$txtrst\]$ " #Smileys depending on success of commands
#export PS1="\[$txtrst\]sean@Tina-osx [\[$bldylw\]\W\[$txtrst\]]$ "


#Set Dir Colors (with humour)
if [ "$TERM" != "dumb" ]; then
	eval `gdircolors ~/.dir_colors`
fi


#Functions
function longcat {
	cat "${1}" | moar;
}

extract () {
	if [ -f $1 ] ; then
		case $1 in
			*.tar.bz2)	tar xvjf $1 && cd $(basename "$1" .tar.bz2) ;;
	*.tar.gz)	tar xvzf $1 && cd $(basename "$1" .tar.gz) ;;
	*.tar.xz)	tar Jxvf $1 && cd $(basename "$1" .tar.xz) ;;
	*.bz2)		bunzip2 $1 && cd $(basename "$1" /bz2) ;;
	*.rar)		unrar x $1 && cd $(basename "$1" .rar) ;;
	*.gz)		gunzip $1 && cd $(basename "$1" .gz) ;;
	*.tar)		tar xvf $1 && cd $(basename "$1" .tar) ;;
	*.tbz2)		tar xvjf $1 && cd $(basename "$1" .tbz2) ;;
	*.tgz)		tar xvzf $1 && cd $(basename "$1" .tgz) ;;
	*.zip)		unzip $1 && cd $(basename "$1" .zip) ;;
	*.Z)		uncompress $1 && cd $(basename "$1" .Z) ;;
	*.7z)		7z x $1 && cd $(basename "$1" .7z) ;;
	*)		echo "don't know how to extract '$1'..." ;;
	esac
	else
		echo "'$1' is not a valid file!"
			fi
}

printf "$bakblu$bldpur$hello$_hi$txtrst\n"

[[ $TERM != "screen" ]] && [[ $USER != "root" ]] && if which tmux 2>&1 >/dev/null; then
    		#if not inside a tmux session, and if no session is started, start a new session
        	test -z "$TMUX" && (tmux attach || tmux new-session)
	fi
